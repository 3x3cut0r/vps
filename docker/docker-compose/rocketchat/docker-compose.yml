version: "3.9"

services:
    rocketchat:
        container_name: rocketchat
        image: rocket.chat:latest
        #command: >
        #    bash -c
        #    "for i in `seq 1 30`; do
        #        node main.js &&
        #        s=$$? && break || s=$$?;
        #        echo \"Tried $$i times. Waiting 5 secs...\";
        #        sleep 5;
        #    done; (exit $$s)"
        restart: unless-stopped
        networks:
            rocketchat:
                ipv4_address: 10.20.192.2
            mongo:
                ipv4_address: 10.20.32.3
            nginx:
                ipv4_address: 10.24.0.212
        # ports:
        #     - 3000:3000
        volumes:
            - rocketchat-uploads:/app/uploads
        environment:
            PORT: "3000"
            ROOT_URL: https://chat.3x3cut0r.de
            MONGO_URL: mongodb://mongo:27017/rocketchat
            MONGO_OPLOG_URL: mongodb://mongo:27017/local?replSet=rs0'
            # MAIL_URL: smtp://smtp.email
            # HTTP_PROXY: http://proxy.domain.com
            # HTTPS_PROXY: http://proxy.domain.com
        depends_on:
            - mongo
        labels:
            - "traefik.backend=rocketchat"
            - "traefik.frontend.rule=Host: chat.3x3cut0r.de"

        #traefik:
        #    image: traefik:latest
        #    restart: unless-stopped
        #    command: >
        #        traefik
        #        --docker
        #        --acme=true
        #        --acme.domains='chat.3x3cut0r.de'
        #        --acme.email='executor55@gmx.de'
        #        --acme.entrypoint=https
        #        --acme.storagefile=acme.json
        #        --defaultentrypoints=http
        #        --defaultentrypoints=https
        #        --entryPoints='Name:http Address::80 Redirect.EntryPoint:https'
        #        --entryPoints='Name:https Address::443 TLS.Certificates:'
        #    ports:
        #        - 80:80
        #        - 443:443
        #    volumes:
        #        - /run/user/2000/docker.sock:/var/run/docker.sock

  # mongo: database
    mongo:
        container_name: mongo
        image: mongo:4.4
        command: mongod --config /etc/mongod.conf
        restart: unless-stopped
        networks:
            mongo:
                ipv4_address: 10.20.32.2
        # ports:
        #   - 27017:27017
        volumes:
            - mongo-data:/data/db
            - mongo-dump:/dump
            - /home/docker/config-files/mongodb/mongod.conf:/etc/mongod.conf
        labels:
            - "traefik.enable=false"

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
    #mongo-init-replica:
    #    container_name: mongo-init-replica
    #    image: mongo:4.0
    #    command: >
    #        bash -c
    #        "for i in `seq 1 30`; do
    #            mongo mongo/rocketchat --eval \"
    #                rs.initiate({
    #                _id: 'rs0',
    #                members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
    #            s=$$? && break || s=$$?;
    #            echo \"Tried $$i times. Waiting 5 secs...\";
    #            sleep 5;
    #        done; (exit $$s)"
    #    networks:
    #        mongo:
    #            ipv4_address: 10.20.32.99
    #    depends_on:
    #        - mongo

  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
    hubot:
        container_name: hubot
        image: rocketchat/hubot-rocketchat:latest
        restart: unless-stopped
        networks:
            rocketchat:
                ipv4_address: 10.20.192.3
        # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
        # ports:
        #     - 3001:808
        environment:
            ROCKETCHAT_URL: rocketchat:3000
            ROCKETCHAT_ROOM: ''
            ROCKETCHAT_USER: hubot.bot
            ROCKETCHAT_PASSWORD: <ROCKETCHAT_PASSWORD>
            BOT_NAME: hubot
            LISTEN_ON_ALL_PUBLIC: "true"
            # you can add more scripts as you'd like here, they need to be installable by npm
            EXTERNAL_SCRIPTS: hubot-help,hubot-seen,hubot-links,hubot-diagnostics
        volumes:
            - hubot-scripts:/home/hubot/scripts
        depends_on:
            - rocketchat

networks:
    mongo:
        name: mongo
        ipam:
            driver: default
            config:
                - subnet: "10.20.32.0/20"
                  gateway: 10.20.32.1
    rocketchat:
        name: rocketchat
        ipam:
            driver: default
            config:
                - subnet: "10.20.192.0/20"
                  gateway: 10.20.192.1
    nginx:
        external:
            name: nginx

volumes:
    mongo-data:
        name: mongo-data
    mongo-dump:
        name: mongo-dump
    rocketchat-uploads:
        name: rocketchat-uploads
    hubot-scripts:
        name: hubot-scripts
