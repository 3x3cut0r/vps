version: '3.9'

services:
  # https://hub.docker.com/_/rocket-chat
  rocketchat:
    container_name: rocketchat
    image: rocketchat/rocket.chat:6.0.0
    command: >
      bash -c
      "for i in `seq 1 30`; do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
      done; (exit $$s)"
    restart: unless-stopped
    networks:
      rocketchat:
        ipv4_address: '10.20.192.2'
      mongo:
        ipv4_address: '10.20.32.3'
    ports:
      - '2212:3000'
    dns:
      - '1.1.1.1'
      - '1.0.0.1'
      - '2606:4700:4700::1111'
      - '2606:4700:4700::1001'
    volumes:
      - rocketchat-uploads:/app/uploads
    environment:
      PORT: '3000'
      ROOT_URL: 'https://chat.3x3cut0r.de/'
      MONGO_URL: 'mongodb://mongo:27017/rocketchat?replicaSet=rs0'
      MONGO_OPLOG_URL: 'mongodb://mongo:27017/local?replicaSet=rs0'
    labels:
      - 'com.centurylinklabs.watchtower.enable=false'
    depends_on:
      - mongo

  # https://hub.docker.com/_/mongo
  mongo:
    container_name: mongo
    image: mongo:5.0
    command: 'mongod --config /etc/mongod.conf'
    restart: unless-stopped
    networks:
      mongo:
        ipv4_address: '10.20.32.2'
    # ports:
    #     - 27017:27017
    dns:
      - '1.1.1.1'
      - '1.0.0.1'
      - '2606:4700:4700::1111'
      - '2606:4700:4700::1001'
    volumes:
      - mongo-data:/data/db
      - mongo-dump:/dump
      - /home/docker/config-files/mongodb/mongod.conf:/etc/mongod.conf

  # https://hub.docker.com/_/mongo
  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  #   mongo-init-replica:
  #     container_name: mongo-init-replica
  #     image: mongo:4.0
  #     command: >
  #       bash -c
  #       "for i in `seq 1 30`; do
  #         mongo mongo/rocketchat --eval \"
  #             rs.initiate({
  #             _id: 'rs0',
  #             members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
  #         s=$$? && break || s=$$?;
  #         echo \"Tried $$i times. Waiting 5 secs...\";
  #         sleep 5;
  #       done; (exit $$s)"
  #     networks:
  #       mongo:
  #         ipv4_address: 10.20.32.99
  #     dns:
  #       - '1.1.1.1'
  #       - '1.0.0.1'
  #       - '2606:4700:4700::1111'
  #       - '2606:4700:4700::1001'
  #     depends_on:
  #       - mongo

  # https://hub.docker.com/r/rocketchat/hubot-rocketchat
  # hubot, the popular chatbot (add the bot user first and change the password before starting this image)
  hubot:
    container_name: hubot
    image: rocketchat/hubot-rocketchat:latest
    restart: unless-stopped
    networks:
      rocketchat:
        ipv4_address: '10.20.192.3'
    # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
    # ports:
    #     - 3001:8080
    dns:
      - '1.1.1.1'
      - '1.0.0.1'
      - '2606:4700:4700::1111'
      - '2606:4700:4700::1001'
    environment:
      ROCKETCHAT_URL: 'rocketchat:3000'
      ROCKETCHAT_ROOM: ''
      ROCKETCHAT_USER: 'hubot.bot'
      ROCKETCHAT_PASSWORD: '<ROCKETCHAT_PASSWORD>'
      BOT_NAME: 'hubot'
      RESPOND_TO_DM: 'true'
      LISTEN_ON_ALL_PUBLIC: 'true' # DEPRICATED
      HUBOT_GOOGLE_CSE_ID: '<GOOGLE_CSE_ID>' # Instructions here: https://github.com/hubot-scripts/hubot-google-images
      HUBOT_GOOGLE_CSE_KEY: '<GOOGLE_CSE_KEY>'
      HUBOT_GOOGLE_IMAGES_HEAR: 'true'
      # you can add more scripts as you'd like here, they need to be installable by npm
      EXTERNAL_SCRIPTS: 'hubot-pugme,hubot-help,hubot-seen,hubot-links,hubot-diagnostics,hubot-calculator,hubot-2048,hubot-darts,hubot-thesimpsons,hubot-tell,hubot-google-images'
    volumes:
      - hubot-scripts:/home/hubot/scripts
    depends_on:
      - rocketchat

networks:
  mongo:
    name: mongo
    ipam:
      driver: default
      config:
        - subnet: '10.20.32.0/20'
          gateway: '10.20.32.1'
  rocketchat:
    name: rocketchat
    ipam:
      driver: default
      config:
        - subnet: '10.20.192.0/20'
          gateway: '10.20.192.1'

volumes:
  mongo-data:
    name: mongo-data
  mongo-dump:
    name: mongo-dump
  rocketchat-uploads:
    name: rocketchat-uploads
  hubot-scripts:
    name: hubot-scripts
